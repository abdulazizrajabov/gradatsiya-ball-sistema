const { Telegraf, Markup, Scenes, session } = require('telegraf');
const db = require('./models');
const User = db.User;
const Class = db.Class;
const StoreItem = db.StoreItem;
const History = db.History;
const { notifyStudent, notifyAdmin } = require('./utils/notifications'); // –î–æ–±–∞–≤–ª–µ–Ω–æ notifyAdmin
require('dotenv').config();

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
const bot = new Telegraf(process.env.TELEGRAM_BOT_TOKEN);

// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Session Middleware
bot.use(session());

// –ü–æ–ª—É—á–µ–Ω–∏–µ ID –∞–¥–º–∏–Ω-–∫–∞–Ω–∞–ª–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const ADMIN_CHANNEL_ID = process.env.ADMIN_CHANNEL_ID;
if (!ADMIN_CHANNEL_ID) {
    console.error('–û—à–∏–±–∫–∞: ADMIN_CHANNEL_ID –Ω–µ –∑–∞–¥–∞–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è.');
    process.exit(1);
}

// –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è —É—á–µ–Ω–∏–∫–æ–≤
const studentMenu = Markup.keyboard([
    ['üèÖ Mening ballarim', 'üîÑ Ballarni almashtirish'],
    ['üèÜ Sinf bo\'yicha reyting']
]).resize();

// –ö–æ–º–∞–Ω–¥–∞ /start –¥–ª—è —É—á–µ–Ω–∏–∫–æ–≤
bot.start(async (ctx) => {
    const user = await User.findOne({ where: { telegram_id: ctx.from.id } });
    if (user) {
        ctx.reply('üòä Ballarni boshqarish tizimiga xush kelibsiz!', studentMenu);
    } else {
        ctx.reply('üòä Ballarni boshqarish tizimiga xush kelibsiz! Iltimos, administrator tomonidan qo\'shilishingizni kuting. ‚è≥');
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã "–ú–æ–∏ –±–∞–ª–ª—ã"
bot.hears('üèÖ Mening ballarim', async (ctx) => {
    const user = await User.findOne({ where: { telegram_id: ctx.from.id } });
    if (!user) {
        ctx.reply('‚ùó Siz ro\'yxatdan o\'tkazilmagansiz. Iltimos, ro\'yxatdan o\'tish uchun administrator bilan bog\'laning.');
        return;
    }
    ctx.reply(`üéâ Sizda ${user.total_points} ta ball bor.`, studentMenu);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã "–û–±–º–µ–Ω—è—Ç—å –±–∞–ª–ª—ã" (–æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Å /buy)
bot.hears('üîÑ Ballarni almashtirish', async (ctx) => {
    const user = await User.findOne({ where: { telegram_id: ctx.from.id } });
    if (!user) {
        ctx.reply('‚ùó Siz ro\'yxatdan o\'tkazilmagansiz. Iltimos, ro\'yxatdan o\'tish uchun administrator bilan bog\'laning.');
        return;
    }

    const items = await StoreItem.findAll({ where: { is_active: true, quantity: { [db.Sequelize.Op.gt]: 0 } } });
    if (items.length === 0) {
        ctx.reply('üõí Do\'konda mavjud bo\'lgan mahsulotlar yo\'q.');
        return;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–∞–ª–ª–æ–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏
    const buttons = items.map(item => [
        Markup.button.callback(`${item.name} sotib olish - ${item.price} ball`, `buy_${item.id}`)
    ]);

    ctx.reply('üõçÔ∏è Ballarni almashtirish uchun mahsulotni tanlang: \n\n‚ùóDiqqat qiling, tugmani bosishingiz bilan ushbu mahsulot avtomatik tarzda siz tomondan sotib olinadi va ballingiz yechiladi.', Markup.inlineKeyboard(buttons));
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ –ø–æ–∫—É–ø–∫–∏
bot.action(/buy_(\d+)/, async (ctx) => {
    const itemId = ctx.match[1];
    console.log(`–ü–æ–∫—É–ø–∫–∞ —Ç–æ–≤–∞—Ä–∞ —Å ID: ${itemId} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Å ID: ${ctx.from.id}`);

    const user = await User.findOne({ where: { telegram_id: ctx.from.id } });
    if (!user) {
        ctx.reply('‚ùó Siz ro\'yxatdan o\'tkazilmagansiz. Iltimos, ro\'yxatdan o\'tish uchun administrator bilan bog\'laning.');
        ctx.answerCbQuery();
        return;
    }

    const item = await StoreItem.findByPk(itemId);
    if (!item || !item.is_active || item.quantity < 1) {
        ctx.reply('üö´ Tanlangan mahsulot ballarni almashtirish uchun mavjud emas.');
        ctx.answerCbQuery();
        return;
    }

    if (user.total_points < item.price) {
        ctx.reply('üôÅ Ushbu mahsulotni olish uchun yetarli ballaringiz yo\'q.');
        ctx.answerCbQuery();
        return;
    }

    // –ù–∞—á–∞–ª–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    const transaction = await db.sequelize.transaction();

    try {
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user.total_points -= item.price;
        await user.save({ transaction });

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞
        item.quantity -= 1;
        await item.save({ transaction });

        // –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ –∏—Å—Ç–æ—Ä–∏–∏ —Å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
        await History.create({
            type: 'purchase', // –¢–∏–ø —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
            points: item.price, // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤
            student_id: user.id, // ID —É—á–µ–Ω–∏–∫–∞
            teacher_id: null, // –ú–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å ID —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –æ—Å—Ç–∞–≤–∏—Ç—å null
            reason: `Sotib olish: ${item.name}`, // –ü—Ä–∏—á–∏–Ω–∞ (–º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å null)
        }, { transaction });

        // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏
        await transaction.commit();
        ctx.reply(`üéÅ Siz muvaffaqiyatli tarzda ${item.price} ballarni "${item.name}" mahsulotiga almashtirdingiz.`, studentMenu);

        // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        const adminMessage = `
üì¶ Sotib olish amalga oshirildi!

O'quvchi: ${user.full_name} (ID: ${user.id})
Mahsulot: ${item.name}
Narxi: ${item.price} ball
Sana: ${new Date().toLocaleString()}
        `;

        // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º notifyAdmin
        await notifyAdmin(bot, adminMessage);

        console.log(`Foydalanuvchi ${user.full_name} ${item.price} ballarni "${item.name}" mahsulotiga almashtirdi.`);
    } catch (error) {
        await transaction.rollback();
        console.error('Ballarni almashtirishda xato:', error);
        ctx.reply('‚ö†Ô∏è Ballarni almashtirishda xatolik yuz berdi. Iltimos, keyinroq qayta urinib ko\'ring.');
    }

    ctx.answerCbQuery();
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã "–†–µ–π—Ç–∏–Ω–≥ –ø–æ –∫–ª–∞—Å—Å—É"
bot.hears('üèÜ Sinf bo\'yicha reyting', async (ctx) => {
    const user = await User.findOne({ where: { telegram_id: ctx.from.id } });
    if (!user) {
        ctx.reply('‚ùó Siz ro\'yxatdan o\'tkazilmagansiz. Iltimos, ro\'yxatdan o\'tish uchun administrator bilan bog\'laning.');
        return;
    }

    const topStudents = await User.findAll({
        where: { class_id: user.class_id },
        order: [['total_points', 'DESC']],
        limit: 10,
    });
    const studentClass = await Class.findOne({ where: { id: user.class_id } });
    let message = `üèÜ *${studentClass?.name} sinfi eng yaxshi o'quvchilari* üèÜ\n`;
    topStudents.forEach((student, index) => {
        message += `${index + 1}. ${student.full_name} - ${student.total_points} ball\n`;
    });

    ctx.reply(message, studentMenu);
});

// Graceful stop
bot.launch();
process.once('SIGINT', () => bot.stop('SIGINT'));
process.once('SIGTERM', () => bot.stop('SIGTERM'));

module.exports = { bot, notifyStudent };
